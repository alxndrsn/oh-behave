#!/usr/bin/env groovy
def junitReportFile = 'target/test-reports/TESTS-TestSuites.xml'
if(args) junitReportFile = args[0]

LINE_LENGTH = 178
LINE_LENGTH = LINE_LENGTH * 3 // extended error messages
final boolean SHOW_PASSES = false
final BG_RED = '\033[41m'
final BG_YELLOW = '\033[43m'
final BG_GREEN = '\033[42m'
final FG_BLACK = '\033[30m'
final RESET = '\033[0m'

def testsuites = new XmlParser().parse(new File(junitReportFile))
testsuites.testsuite.each { testsuite ->
	if(testsuite.@errors == '0' && testsuite.@failures == '0') {
		if(SHOW_PASSES) {
			println "${BG_GREEN}${FG_BLACK}[PASS]${testsuite.@package?"${testsuite.@package}.":''}${testsuite.@name} : ${testsuite.testcase.size()} tests all passed"
		}
		return
	}
	testsuite.testcase.each { c ->
		def error = c.error
		def fail = c.failure
		def pass = !error && !fail
		def statusLight = error? "${BG_RED}${FG_BLACK}[ERRR]": fail? "${BG_YELLOW}${FG_BLACK}[FAIL]": "${BG_GREEN}${FG_BLACK}[PASS]"
		def statusText = error?
				(c.error[0].@message?: c.error[0].@type):
				fail? c.failure[0].@message: 'PASSED'
		statusText = statusText?.replace('\n', '\\n')
		def infos = "${statusLight}${c.@classname} : ${c.@name} : $statusText"
		if(infos.size() > LINE_LENGTH) infos = infos[0..(LINE_LENGTH-1)]
		if(!pass || SHOW_PASSES) println infos
	}
}
print RESET

